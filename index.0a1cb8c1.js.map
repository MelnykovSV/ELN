{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","node_modules/@swc/helpers/lib/_define_property.js","src/js/fraction.js","src/js/compound.js","<<jsx-config-pragma.js>>","src/js/renderCompoundForm.js","src/js/scheme.js","src/js/page.js","src/js/eln.js","src/js/localStorage.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","export class Fraction {\n  static fractionGlobalID = 0;\n  // #mass;\n  // #purity;\n  // #isNMR;\n  // #isLCMS;\n  // #comment;\n  constructor() {\n    this.fractionGlobalID = Fraction.fractionGlobalID += 1;\n    this.mass = null;\n    this.purity = null;\n    this.isNMR = false;\n    this.isLCMS = false;\n    this.comment = false;\n  }\n}\n","import { Fraction } from './fraction';\n\nexport class Compound {\n  static compoundGlobalID = 0;\n  // #mw;\n  // #smiles;\n  // #isTestSuccessful;\n  // #isScalingSuccessful;\n  // #fractions;\n\n  constructor(\n    {\n      // compoundGlobalID = (Compound.compoundGlobalID += 1),\n      mw = null,\n      dbID = null,\n      smiles = null,\n      isTestSuccessful = false,\n      isScalingSuccessful = false,\n      fractions = [],\n    } = {},\n    globalCompoundID\n  ) {\n    this.compoundGlobalID = globalCompoundID;\n    this.mw = mw;\n    this.smiles = smiles;\n    this.isTestSuccessful = isTestSuccessful;\n    this.isScalingSuccessful = isScalingSuccessful;\n    this.fractions = fractions;\n    this.dbID = dbID;\n  }\n\n  // get isTestSuccessful() {\n  //   return this.#isTestSuccessful;\n  // }\n  // get isScalingSuccessful() {\n  //   return this.#isScalingSuccessful;\n  // }\n\n  // set isTestSuccessful(value) {\n  //   if (typeof value === 'boolean') {\n  //     this.#isTestSuccessful = value;\n  //   } else {\n  //     throw new Error('Value must be a boolean');\n  //   }\n  // }\n  // set isScalingSuccessful(value) {\n  //   if (typeof value === 'boolean') {\n  //     this.#isScalingSuccessful = value;\n  //   } else {\n  //     throw new Error('Value must be a boolean');\n  //   }\n  // }\n\n  addFraction() {\n    this.fractions.push(new Fraction());\n  }\n}\n",null,"export function renderCompoundForm({\n  compoundGlobalID,\n  mw = '',\n  smiles = '',\n  isTestSuccessful,\n  isScalingSuccessful,\n  dbID = '',\n  fractions,\n} = {}) {\n  const mainPage = document.querySelector('.main-page');\n  const markup = `<form action=\"#\" class=\"compound-form\" data-id = '${compoundGlobalID}'>\n    <div class=\"compound-form__body\">\n      <div class=\"compound-form__upper-part\">\n        <div class=\"compound-form-canvas-container\">\n          <canvas id=\"canvas${compoundGlobalID}\"></canvas>\n        </div>\n        <div class=\"compound-form__compound-data\">\n          <label class=\"\">\n            ID\n            <input type=\"text\" name=\"dbID\" value=\"${dbID}\" />\n          </label>\n          <label class=\"\">\n            MW\n            <input type=\"text\" name=\"mw\" value=\"${mw}\" />\n          </label>\n          <label>\n            <input type=\"checkbox\" id=\"\" name=\"isTestSuccessful\" ${\n              isTestSuccessful === true ? 'checked' : ''\n            } />\n            Test\n          </label>\n          <label>\n            <input type=\"checkbox\" id=\"\" name=\"isScalingSuccessful\" ${\n              isScalingSuccessful === true ? 'checked' : ''\n            } />\n            Scaling\n          </label>\n        </div>\n      </div>\n      <div class=\"compound-form__lower-part\">\n        <label class=\"text-input-label\">\n          SMILES\n          <input type=\"text\" name=\"smiles\" value=\"${smiles}\" />\n        </label>\n        <div class=\"compound-from__button-block\">\n          <button type=\"submit\">Add task</button>\n          <button type=\"submit\">Add compund</button>\n          <label>\n            Fractions\n            <input type=\"checkbox\" name=\"\" id=\"\" />\n          </label>\n        </div>\n      </div>\n    </div>\n    <div class=\"compound-form__fractions\">\n      <div class=\"compound-form__fractions-main\">\n        <label>\n          Fractions\n          <select name=\"\" id=\"\">\n            <option value=\"\">Fraction 1</option>\n            <option value=\"\">Fraction 2</option>\n          </select>\n        </label>\n        <button type=\"submit\">Add fraction</button>\n      </div>\n      <div class=\"compound-form__single-fraction\">\n        <div class=\"compound-form__single-fraction-upper-part\">\n          <div class=\"compound-form__single-fraction-characteristics\">\n            <label class=\"\">\n              Mass\n              <input type=\"text\" />\n            </label>\n            <label class=\"\">\n              Purity\n              <input type=\"text\" />\n            </label>\n          </div>\n          <div class=\"compound-form__single-fraction-spectra\">\n            <label>\n              <input type=\"checkbox\" name=\"\" id=\"\" />\n              NMR\n            </label>\n            <label>\n              <input type=\"checkbox\" name=\"\" id=\"\" />\n              LCMS\n            </label>\n          </div>\n        </div>\n        <div class=\"compound-form__single-fraction-lower-part\">\n          <label class=\"\">\n            Comments\n            <textarea name=\"\" id=\"\" cols=\"30\" rows=\"3\"></textarea>\n          </label>\n        </div>\n      </div>\n    </div>\n  </form>`;\n  mainPage.insertAdjacentHTML('beforeend', markup);\n}\n","import { Compound } from './compound.js';\nimport { renderCompoundForm } from './renderCompoundForm.js';\n\nexport class Scheme {\n  static schemeGlobalID = 0;\n  // #body;\n  constructor({\n    schemeGlobalID = (Scheme.schemeGlobalID += 1),\n    body = [],\n  } = {}) {\n    this.schemeGlobalID = schemeGlobalID;\n    this.body = body;\n    // if (this.body.length === 0) {\n    //   this.body.push(new Compound());\n    // }\n  }\n\n  addCompound(globalCompoundID) {\n    this.body.push(new Compound({}, globalCompoundID));\n    // renderCompoundForm();\n  }\n\n  // get body() {\n  //   return this.#body;\n  // }\n}\n","import { Scheme } from './scheme';\n\nexport class Page {\n  body;\n  constructor({ body = [] } = {}) {\n    this.body = body;\n    // if (this.body.length === 0) {\n    //   this.body.push(new Scheme());\n    // }\n  }\n\n  //   get body() {\n  //     return this.#body;\n  //   }\n}\n","import { Scheme } from './scheme.js';\nimport { Compound } from './compound.js';\nimport { Fraction } from './fraction.js';\nimport { Page } from './page.js';\nimport { renderCompoundForm } from './renderCompoundForm.js';\n// import { conformsTo } from 'lodash';\nimport { getFromLocalStorage } from './localStorage.js';\n// import { Drawer } from './../../node_modules/smiles-drawer/dist/smiles-drawer.min';\n// const SmilesDrawer = require('smiles-drawer');\n// const SmilesDrawer = require('./../../node_modules/smiles-drawer/dist/smiles-drawer.min');\n\nconst pageButton = document.querySelector('.page-button');\nconst schemeButton = document.querySelector('.scheme-button');\nconst compoundButton = document.querySelector('.compound-button');\nconst mainPage = document.querySelector('.main-page');\nconst mainCanvas = document.querySelector('.main-canvas');\nconst mainInput = document.querySelector('.main-input');\n\nlet globalCompoundID = parseInt(localStorage.getItem('globalCompoundID')) || 0;\n\nlet options = {\n  width: 150,\n  height: 150,\n};\n\nlet smilesDrawer = new SmilesDrawer.Drawer(options);\n\ncompoundButton.addEventListener('click', () => {\n  globalCompoundID += 1;\n  localStorage.setItem('globalCompoundID', globalCompoundID);\n\n  page.body[0].addCompound(globalCompoundID);\n  renderCompoundForm(page.body[0].body[page.body[0].body.length - 1]);\n  mainPage.lastChild.addEventListener('input', e => {\n    if (e.target.nodeName === 'INPUT') {\n      const compoundObject = page.body[0].body.find(\n        item => item.compoundGlobalID === parseInt(e.currentTarget.dataset.id)\n      );\n      compoundObject[e.target.name] = e.target.value;\n      localStorage.setItem('pageBody', JSON.stringify(page));\n      if (e.target.name === 'smiles') {\n        SmilesDrawer.parse(e.target.value, function (tree) {\n          smilesDrawer.draw(\n            tree,\n            `canvas${e.currentTarget.dataset.id}`,\n            'light',\n            false\n          );\n        });\n      }\n    }\n\n    mainPage.lastChild.addEventListener('change', e => {\n      if (e.target.nodeName === 'INPUT' && e.target.type === 'checkbox') {\n        console.log('check');\n        console.log(e.target.checked);\n        const compoundObject = page.body[0].body.find(\n          item => item.compoundGlobalID === parseInt(e.currentTarget.dataset.id)\n        );\n        compoundObject[e.target.name] = e.target.checked;\n        localStorage.setItem('pageBody', JSON.stringify(page));\n      }\n    });\n  });\n  localStorage.setItem('pageBody', JSON.stringify(page));\n});\n\nlet page = getFromLocalStorage();\n\nif (page === null) {\n  page = new Page();\n}\n\nif (page.body.length !== 0) {\n  const scheme = page.body[0];\n  const sortedSchemeBody = scheme.body.sort((a, b) => {\n    a.compoundGlobalID - b.compoundGlobalID;\n  });\n  for (const item of sortedSchemeBody) {\n    renderCompoundForm(item);\n\n    const canvas = document.querySelector(`#canvas${item.compoundGlobalID}`);\n    SmilesDrawer.parse(item.smiles, function (tree) {\n      smilesDrawer.draw(tree, `canvas${item.compoundGlobalID}`, 'light', false);\n    });\n  }\n} else {\n  console.log('local storage is empty');\n  page.body.push(new Scheme());\n}\n\nconst formsCollection = document.querySelectorAll('[data-id]');\n\nfor (item of formsCollection) {\n  item.addEventListener('input', e => {\n    if (e.target.nodeName === 'INPUT' && e.target.type === 'text') {\n      const compoundObject = page.body[0].body.find(\n        item => item.compoundGlobalID === parseInt(e.currentTarget.dataset.id)\n      );\n      compoundObject[e.target.name] = e.target.value;\n      localStorage.setItem('pageBody', JSON.stringify(page));\n\n      if (e.target.name === 'smiles') {\n        SmilesDrawer.parse(e.target.value, function (tree) {\n          smilesDrawer.draw(\n            tree,\n            `canvas${e.currentTarget.dataset.id}`,\n            'light',\n            false\n          );\n        });\n      }\n    }\n  });\n\n  item.addEventListener('change', e => {\n    if (e.target.nodeName === 'INPUT' && e.target.type === 'checkbox') {\n      console.log('check');\n      console.log(e.target.checked);\n      const compoundObject = page.body[0].body.find(\n        item => item.compoundGlobalID === parseInt(e.currentTarget.dataset.id)\n      );\n      compoundObject[e.target.name] = e.target.checked;\n      localStorage.setItem('pageBody', JSON.stringify(page));\n    }\n  });\n}\n","import { Page } from './page';\nimport { Scheme } from './scheme';\nimport { Compound } from './compound';\nimport { Fraction } from './fraction';\n\nexport function getFromLocalStorage() {\n  if (!localStorage.getItem('pageBody')) {\n    return null;\n  }\n  const page = new Page();\n\n  const data = JSON.parse(localStorage.getItem('pageBody'));\n  for (schemeData of data.body) {\n    const scheme = new Scheme();\n    page.body.push(scheme);\n\n    for (compoundData of schemeData.body) {\n      const compound = new Compound(\n        compoundData,\n        compoundData.compoundGlobalID\n      );\n      scheme.body.push(compound);\n\n      for (fractionData of compoundData.fractions) {\n        const fraction = new Fraction();\n        compound.fractions.push(fraction);\n      }\n    }\n  }\n\n  return page;\n}\n\n// export function\n"],"names":["Object","defineProperty","$665014edacbfe17b$exports","value","default","instance","Constructor","TypeError","$74e7f8130373505f$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","$74e7f8130373505f$exports","protoProps","staticProps","prototype","$cec85eba0a352189$exports","obj","$d67921ee12eadc51$export$b336c2702c498be5","Fraction","this","fractionGlobalID","mass","purity","isNMR","isLCMS","comment","$parcel$interopDefault","$7b31147ec915daf0$export$3898397e4b5f0c95","Compound","ref","arguments","_mw","mw","_dbID","dbID","_smiles","smiles","_isTestSuccessful","isTestSuccessful","_isScalingSuccessful","isScalingSuccessful","_fractions","fractions","globalCompoundID","compoundGlobalID","push","$1b8ba58b1229bd09$export$8892eb4527f7cb1c","mainPage","document","querySelector","markup","concat","insertAdjacentHTML","$735bf0ab80c69926$export$c82fc41ad191f9b2","Scheme","_schemeGlobalID","schemeGlobalID","_body","body","$d393c6b361322d0d$export$6955bcca4cd3539f","Page","$9b40833cdc4e19db$var$compoundButton","$9b40833cdc4e19db$var$mainPage","$9b40833cdc4e19db$var$globalCompoundID","parseInt","localStorage","getItem","$9b40833cdc4e19db$var$smilesDrawer","SmilesDrawer","Drawer","width","height","addEventListener","setItem","$9b40833cdc4e19db$var$page","addCompound","lastChild","e1","nodeName","find","item","currentTarget","dataset","id","name","JSON","stringify","parse","tree","draw","e","type","console","log","checked","page","data","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","schemeData","scheme","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","compoundData","compound","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","fractionData","fraction","err","return","$9b40833cdc4e19db$var$sortedSchemeBody","sort","a","b","$9b40833cdc4e19db$var$_iteratorNormalCompletion","$9b40833cdc4e19db$var$_didIteratorError","$9b40833cdc4e19db$var$_iteratorError","$9b40833cdc4e19db$var$_step","_$item","$9b40833cdc4e19db$var$_iterator","$9b40833cdc4e19db$var$_loop","$9b40833cdc4e19db$var$formsCollection","querySelectorAll","$9b40833cdc4e19db$var$_iteratorNormalCompletion1","$9b40833cdc4e19db$var$_didIteratorError1","$9b40833cdc4e19db$var$_iteratorError1","$9b40833cdc4e19db$var$_step1","$9b40833cdc4e19db$var$_iterator1"],"version":3,"file":"index.0a1cb8c1.js.map"}