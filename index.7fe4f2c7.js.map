{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","node_modules/@swc/helpers/lib/_define_property.js","src/js/fraction.js","src/js/compound.js","<<jsx-config-pragma.js>>","src/js/renderCompoundForm.js","src/js/scheme.js","src/js/page.js","src/js/eln.js","src/js/localStorage.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","export class Fraction {\n  static fractionGlobalID = 0;\n  // #mass;\n  // #purity;\n  // #isNMR;\n  // #isLCMS;\n  // #comment;\n  constructor() {\n    this.fractionGlobalID = Fraction.fractionGlobalID += 1;\n    this.mass = null;\n    this.purity = null;\n    this.isNMR = false;\n    this.isLCMS = false;\n    this.comment = false;\n  }\n}\n","import { Fraction } from './fraction';\n\nexport class Compound {\n  static compoundGlobalID = 0;\n  // #mw;\n  // #smiles;\n  // #isTestSuccessful;\n  // #isScalingSuccessful;\n  // #fractions;\n\n  constructor(\n    {\n      // compoundGlobalID = (Compound.compoundGlobalID += 1),\n      mw = null,\n      dbID = null,\n      smiles = null,\n      isTestSuccessful = false,\n      isScalingSuccessful = false,\n      fractions = [],\n    } = {},\n    globalCompoundID\n  ) {\n    this.compoundGlobalID = globalCompoundID;\n    this.mw = mw;\n    this.smiles = smiles;\n    this.isTestSuccessful = isTestSuccessful;\n    this.isScalingSuccessful = isScalingSuccessful;\n    this.fractions = fractions;\n    this.dbID = dbID;\n  }\n\n  // get isTestSuccessful() {\n  //   return this.#isTestSuccessful;\n  // }\n  // get isScalingSuccessful() {\n  //   return this.#isScalingSuccessful;\n  // }\n\n  // set isTestSuccessful(value) {\n  //   if (typeof value === 'boolean') {\n  //     this.#isTestSuccessful = value;\n  //   } else {\n  //     throw new Error('Value must be a boolean');\n  //   }\n  // }\n  // set isScalingSuccessful(value) {\n  //   if (typeof value === 'boolean') {\n  //     this.#isScalingSuccessful = value;\n  //   } else {\n  //     throw new Error('Value must be a boolean');\n  //   }\n  // }\n\n  addFraction() {\n    this.fractions.push(new Fraction());\n  }\n}\n",null,"export function renderCompoundForm(\n  {\n    compoundGlobalID,\n    mw = '',\n    smiles = '',\n    isTestSuccessful,\n    isScalingSuccessful,\n    dbID = '',\n    fractions,\n  } = {},\n  schemeID,\n  isLastInScheme\n) {\n  const mainPage = document.querySelector(`[data-schemeid='${schemeID}']`);\n  const markup = `<form action=\"#\" class=\"compound-form\" data-id='${compoundGlobalID}' data-schemeID=''>\n    <div class=\"compound-form__body\">\n      <div class=\"compound-form__upper-part\">\n        <div class=\"compound-form-canvas-container\">\n          <canvas id=\"canvas${compoundGlobalID}\"></canvas>\n        </div>\n        <div class=\"compound-form__compound-data\">\n          <label class=\"\">\n            ID\n            <input type=\"text\" name=\"dbID\" value=\"${dbID}\" />\n          </label>\n          <label class=\"\">\n            MW\n            <input class='compound-form__mw-input' type=\"text\" name=\"mw\" value=\"${mw}\" />\n          </label>\n          <label>\n            <input type=\"checkbox\" id=\"\" name=\"isTestSuccessful\" ${\n              isTestSuccessful === true ? 'checked' : ''\n            } />\n            Test\n          </label>\n          <label>\n            <input type=\"checkbox\" id=\"\" name=\"isScalingSuccessful\" ${\n              isScalingSuccessful === true ? 'checked' : ''\n            } />\n            Scaling\n          </label>\n        </div>\n      </div>\n      <div class=\"compound-form__lower-part\">\n        <label class=\"text-input-label\">\n          SMILES\n          <input type=\"text\" name=\"smiles\" value=\"${smiles}\" />\n        </label>\n        <div class=\"compound-from__button-block\">\n          <button type=\"submit\">Add task</button>\n          <button type=\"submit\" name='addCompound' ${\n            isLastInScheme !== 'last' ? 'disabled' : ''\n          }>Add compund</button>\n          <label>\n            Fractions\n            <input type=\"checkbox\" name=\"\" id=\"\" />\n          </label>\n        </div>\n      </div>\n    </div>\n    <div class=\"compound-form__fractions\">\n      <div class=\"compound-form__fractions-main\">\n        <label>\n          Fractions\n          <select name=\"\" id=\"\">\n            <option value=\"\">Fraction 1</option>\n            <option value=\"\">Fraction 2</option>\n          </select>\n        </label>\n        <button type=\"submit\">Add fraction</button>\n      </div>\n      <div class=\"compound-form__single-fraction\">\n        <div class=\"compound-form__single-fraction-upper-part\">\n          <div class=\"compound-form__single-fraction-characteristics\">\n            <label class=\"\">\n              Mass\n              <input type=\"text\" />\n            </label>\n            <label class=\"\">\n              Purity\n              <input type=\"text\" />\n            </label>\n          </div>\n          <div class=\"compound-form__single-fraction-spectra\">\n            <label>\n              <input type=\"checkbox\" name=\"\" id=\"\" />\n              NMR\n            </label>\n            <label>\n              <input type=\"checkbox\" name=\"\" id=\"\" />\n              LCMS\n            </label>\n          </div>\n        </div>\n        <div class=\"compound-form__single-fraction-lower-part\">\n          <label class=\"\">\n            Comments\n            <textarea name=\"\" id=\"\" cols=\"30\" rows=\"3\"></textarea>\n          </label>\n        </div>\n      </div>\n    </div>\n  </form>`;\n  mainPage.insertAdjacentHTML('beforeend', markup);\n}\n","import { Compound } from './compound.js';\nimport { renderCompoundForm } from './renderCompoundForm.js';\n\nexport class Scheme {\n  static globalSchemeID = 0;\n  // #body;\n  constructor({\n    globalSchemeID = (Scheme.globalSchemeID += 1),\n    body = [],\n  } = {}) {\n    this.globalSchemeID = globalSchemeID;\n    this.body = body;\n    // if (this.body.length === 0) {\n    //   this.body.push(new Compound());\n    // }\n  }\n\n  addCompound(globalCompoundID) {\n    this.body.push(new Compound({}, globalCompoundID));\n    // renderCompoundForm();\n  }\n\n  // get body() {\n  //   return this.#body;\n  // }\n}\n","import { Scheme } from './scheme';\n\nexport class Page {\n  body;\n  constructor({ body = [] } = {}) {\n    this.body = body;\n    // if (this.body.length === 0) {\n    //   this.body.push(new Scheme());\n    // }\n  }\n\n  //   get body() {\n  //     return this.#body;\n  //   }\n  addScheme(globalSchemeID) {\n    this.body.push(new Scheme({}, globalSchemeID));\n    // renderCompoundForm();\n  }\n}\n","import { Scheme } from './scheme.js';\nimport { Compound } from './compound.js';\nimport { Fraction } from './fraction.js';\nimport { Page } from './page.js';\nimport { renderCompoundForm } from './renderCompoundForm.js';\n\n// import { conformsTo } from 'lodash';\nimport { getFromLocalStorage } from './localStorage.js';\n// import { Drawer } from './../../node_modules/smiles-drawer/dist/smiles-drawer.min';\n// const SmilesDrawer = require('smiles-drawer');\n// const SmilesDrawer = require('./../../node_modules/smiles-drawer/dist/smiles-drawer.min');\n\nconst pageButton = document.querySelector('.page-button');\nconst schemeButton = document.querySelector('.scheme-button');\n\nconst sheet = document.querySelector('.sheet');\n\nlet globalCompoundID = parseInt(localStorage.getItem('globalCompoundID')) || 0;\nlet globalSchemeID = parseInt(localStorage.getItem('globalSchemeID')) || 0;\n\nlet options = {\n  width: 150,\n  height: 150,\n};\n\nlet smilesDrawer = new SmilesDrawer.Drawer(options);\n\n///Initial loading page data  from localstorage and renderinf of the page\nlet page = getFromLocalStorage();\n\nif (page === null) {\n  page = new Page();\n}\n\nif (page.body.length !== 0) {\n  for (let i = 0; i < page.body.length; i += 1) {\n    const currentScemeID = page.body[i].globalSchemeID;\n    sheet.insertAdjacentHTML(\n      'beforeend',\n      `<div class=\"scheme\" data-schemeID='${currentScemeID}'></div>`\n    );\n    const scheme = page.body[i];\n    const sortedSchemeBody = scheme.body.sort((a, b) => {\n      a.compoundGlobalID - b.compoundGlobalID;\n    });\n    for (const item of sortedSchemeBody) {\n      switch (item) {\n        case sortedSchemeBody[sortedSchemeBody.length - 1]:\n          renderCompoundForm(item, currentScemeID, 'last');\n          break;\n        default:\n          renderCompoundForm(item, currentScemeID);\n      }\n      // renderCompoundForm(item);\n      SmilesDrawer.parse(item.smiles, function (tree) {\n        smilesDrawer.draw(\n          tree,\n          `canvas${item.compoundGlobalID}`,\n          'light',\n          false\n        );\n      });\n    }\n  }\n} else {\n  console.log('local storage is empty');\n}\n\nconst schemes = document.querySelectorAll('.scheme');\n\n/// This listener creates a new form on \"Add compound\" button click. It calculates new  globalCompoundID and saves new value to localStorage,\n/// add new compound object to the page object, render the form, adds eventlisteners to it and saves new page object to localstorage\n\nfor (const scheme of schemes) {\n  scheme.addEventListener('click', e => {\n    const currentSchemeID = e.currentTarget.dataset.schemeid;\n\n    if (e.target.name === 'addCompound') {\n      e.preventDefault();\n      globalCompoundID += 1;\n      e.target.disabled = true;\n      // console.log(e.currentTarget.parentElement);\n      localStorage.setItem('globalCompoundID', globalCompoundID);\n      page.body[currentSchemeID - 1].addCompound(globalCompoundID);\n      renderCompoundForm(\n        page.body[currentSchemeID - 1].body[\n          page.body[currentSchemeID - 1].body.length - 1\n        ],\n        e.currentTarget.dataset.schemeid,\n        'last'\n      );\n      if (scheme.lastChild) {\n        scheme.lastChild.addEventListener('input', e => {\n          textInputHandler(e, currentSchemeID);\n        });\n        scheme.lastChild.addEventListener('change', e => {\n          checkboxClicksHandler(e, currentSchemeID);\n        });\n        localStorage.setItem('pageBody', JSON.stringify(page));\n      }\n    }\n  });\n}\n\nschemeButton.addEventListener('click', () => {\n  console.log('scheme id before adding: ' + globalSchemeID);\n  globalSchemeID += 1;\n  const currentSchemeID = globalSchemeID;\n  console.log('scheme id after adding: ' + currentSchemeID);\n  localStorage.setItem('globalSchemeID', currentSchemeID);\n  page.addScheme(currentSchemeID);\n  sheet.insertAdjacentHTML(\n    'beforeend',\n    `<div class=\"scheme\" data-schemeID='${currentSchemeID}'></div>`\n  );\n  globalCompoundID += 1;\n  const currentCompoundID = globalCompoundID;\n  localStorage.setItem('globalCompoundID', globalCompoundID);\n  console.log(page.body[currentSchemeID - 1]);\n  page.body[currentSchemeID - 1].addCompound(currentCompoundID);\n  renderCompoundForm(\n    page.body[currentSchemeID - 1].body[0],\n    currentSchemeID,\n    'last'\n  );\n  console.log(\n    `added new scheme with id ${currentSchemeID} with a new form(id: ${currentCompoundID})`\n  );\n\n  const addedScheme = document.querySelector('.sheet').lastChild;\n  const lastChild = addedScheme.lastChild;\n\n  console.log('currentSchemeID!!!!!' + currentSchemeID);\n  console.log(addedScheme);\n  console.log(addedScheme.lastChild);\n\n  addedScheme.addEventListener('click', e => {\n    const currentSchemeID = e.currentTarget.dataset.schemeid;\n    // console.log(schemes);\n    // console.log(currentSchemeID);\n    console.log(addedScheme);\n\n    if (e.target.name === 'addCompound') {\n      e.preventDefault();\n      globalCompoundID += 1;\n      e.target.disabled = true;\n      // console.log(e.currentTarget.parentElement);\n      localStorage.setItem('globalCompoundID', globalCompoundID);\n      page.body[currentSchemeID - 1].addCompound(globalCompoundID);\n      renderCompoundForm(\n        page.body[currentSchemeID - 1].body[\n          page.body[currentSchemeID - 1].body.length - 1\n        ],\n        e.currentTarget.dataset.schemeid,\n        'last'\n      );\n      console.log(addedScheme);\n      console.log(addedScheme.lastChild);\n      if (addedScheme.lastChild) {\n        addedScheme.lastChild.addEventListener('input', e => {\n          textInputHandler(e, currentSchemeID);\n        });\n        addedScheme.lastChild.addEventListener('change', e => {\n          checkboxClicksHandler(e, currentSchemeID);\n        });\n        localStorage.setItem('pageBody', JSON.stringify(page));\n      }\n    }\n  });\n\n  if (addedScheme.lastChild) {\n    addedScheme.lastChild.addEventListener('input', e => {\n      textInputHandler(e, currentSchemeID);\n    });\n    addedScheme.lastChild.addEventListener('change', e => {\n      checkboxClicksHandler(e, currentSchemeID);\n    });\n    localStorage.setItem('pageBody', JSON.stringify(page));\n  } else {\n    alert('UNKNOWN ERROR OCCURED!!! PLEASE RELOAD THE PAGE');\n  }\n\n  localStorage.setItem('pageBody', JSON.stringify(page));\n});\n\nconst formsCollection = document.querySelectorAll('[data-id]');\nconsole.log(formsCollection);\n\n// for (scheme of schemes) {\n//   const currentSchemeID = scheme.dataset.schemeid;\n//   for (item of formsCollection) {\n//     console.log(item.dataset.id);\n//     item.addEventListener('input', e => {\n//       textInputHandler(e, currentSchemeID);\n//     });\n//     item.addEventListener('change', e => {\n//       checkboxClicksHandler(e, currentSchemeID);\n//     });\n//   }\n// }\nfor (const form of formsCollection) {\n  form.addEventListener('input', e => {\n    console.log(form.parentNode.dataset.schemeid);\n    console.log(form);\n    textInputHandler(e, form.parentNode.dataset.schemeid);\n  });\n  form.addEventListener('change', e => {\n    checkboxClicksHandler(e, form.parentNode.dataset.schemeid);\n  });\n}\n\n// for (let i = 0; i < formsCollection.length; i += 1) {\n//   formsCollection[i].addEventListener('input', e => {\n//     console.log(formsCollection[i].parentNode.dataset.schemeid);\n//     console.log(formsCollection[i]);\n//     textInputHandler(e, formsCollection[i].parentNode.dataset.schemeid);\n//   });\n//   formsCollection[i].addEventListener('change', e => {\n//     checkboxClicksHandler(e, formsCollection[i].parentNode.dataset.schemeid);\n//   });\n// }\n\n///Checks if the target is text input and if it is - on change saves its value  to localstorage\n/// If it is a SMILES input - draws molecule to canvas\nconsole.log(page);\nfunction textInputHandler(e, schemeID) {\n  console.log('this:' + schemeID);\n  // e.currentTarget.dataset.globalSchemeID\n  if (e.target.nodeName === 'INPUT' && e.target.type === 'text') {\n    const compoundObject = page.body[schemeID - 1].body.find(\n      item => item.compoundGlobalID === parseInt(e.currentTarget.dataset.id)\n    );\n\n    console.log(page.body[schemeID - 1].body);\n    compoundObject[e.target.name] = e.target.value;\n    localStorage.setItem('pageBody', JSON.stringify(page));\n\n    if (e.target.name === 'smiles') {\n      const molWeightInput = e.currentTarget.querySelector(\n        '.compound-form__mw-input'\n      );\n      SmilesDrawer.parse(e.target.value, function (tree) {\n        smilesDrawer.draw(\n          tree,\n          `canvas${e.currentTarget.dataset.id}`,\n          'light',\n          false\n        );\n      });\n\n      SmilesDrawer.parse(e.target.value, tree => {\n        const formula = smilesDrawer.getMolecularFormula(tree);\n        molWeightInput.value = calc(formula).mass;\n        compoundObject.mw = calc(formula).mass;\n        localStorage.setItem('pageBody', JSON.stringify(page));\n      });\n    }\n  }\n}\n\n///Checks if the target is checkbox and if it is - on change saves its value  to localstorage\n\nfunction checkboxClicksHandler(e, id) {\n  console.log('this:' + id);\n  if (e.target.nodeName === 'INPUT' && e.target.type === 'checkbox') {\n    const compoundObject = page.body[id - 1].body.find(\n      item => item.compoundGlobalID === parseInt(e.currentTarget.dataset.id)\n    );\n    compoundObject[e.target.name] = e.target.checked;\n    localStorage.setItem('pageBody', JSON.stringify(page));\n  }\n}\n\n// console.log(\n//   JSON.parse(\n//     '{\"body\":[{\"globalSchemeID\":1,\"body\":[{\"compoundGlobalID\":1,\"mw\":null,\"smiles\":null,\"isTestSuccessful\":false,\"isScalingSuccessful\":false,\"fractions\":[],\"dbID\":null},{\"compoundGlobalID\":2,\"mw\":\"25.8458\",\"smiles\":\"cbxc\",\"isTestSuccessful\":false,\"isScalingSuccessful\":false,\"fractions\":[],\"dbID\":null},{\"compoundGlobalID\":3,\"mw\":\"54.0916\",\"smiles\":\"cccc\",\"isTestSuccessful\":false,\"isScalingSuccessful\":false,\"fractions\":[],\"dbID\":null},{\"compoundGlobalID\":4,\"mw\":null,\"smiles\":null,\"isTestSuccessful\":false,\"isScalingSuccessful\":false,\"fractions\":[],\"dbID\":null},{\"compoundGlobalID\":5,\"mw\":\"67.1106\",\"smiles\":\"ccccc\",\"isTestSuccessful\":false,\"isScalingSuccessful\":false,\"fractions\":[],\"dbID\":\"123\"},{\"compoundGlobalID\":6,\"mw\":\"100.204\",\"smiles\":\"CCCCCCC\",\"isTestSuccessful\":false,\"isScalingSuccessful\":false,\"fractions\":[],\"dbID\":null},{\"compoundGlobalID\":7,\"mw\":\"83.1533\",\"smiles\":\"CCCccc\",\"isTestSuccessful\":true,\"isScalingSuccessful\":true,\"fractions\":[],\"dbID\":null},{\"compoundGlobalID\":8,\"mw\":\"13.8348\",\"smiles\":\"\",\"isTestSuccessful\":true,\"isScalingSuccessful\":false,\"fractions\":[],\"dbID\":null},{\"compoundGlobalID\":14,\"mw\":\"123.218\",\"smiles\":\"CCCCccccc\",\"isTestSuccessful\":false,\"isScalingSuccessful\":false,\"fractions\":[],\"dbID\":null},{\"compoundGlobalID\":24,\"mw\":null,\"smiles\":null,\"isTestSuccessful\":false,\"isScalingSuccessful\":false,\"fractions\":[],\"dbID\":null}]},{\"globalSchemeID\":2,\"body\":[{\"compoundGlobalID\":30,\"mw\":null,\"smiles\":null,\"isTestSuccessful\":false,\"isScalingSuccessful\":false,\"fractions\":[],\"dbID\":null}]},{\"globalSchemeID\":3,\"body\":[{\"compoundGlobalID\":31,\"mw\":null,\"smiles\":null,\"isTestSuccessful\":false,\"isScalingSuccessful\":false,\"fractions\":[],\"dbID\":null}]},{\"globalSchemeID\":4,\"body\":[{\"compoundGlobalID\":32,\"mw\":null,\"smiles\":null,\"isTestSuccessful\":false,\"isScalingSuccessful\":false,\"fractions\":[],\"dbID\":null}]},{\"globalSchemeID\":5,\"body\":[{\"compoundGlobalID\":33,\"mw\":null,\"smiles\":null,\"isTestSuccessful\":false,\"isScalingSuccessful\":false,\"fractions\":[],\"dbID\":null},{\"compoundGlobalID\":34,\"mw\":\"25.8458\",\"smiles\":\"cbxc\",\"isTestSuccessful\":false,\"isScalingSuccessful\":false,\"fractions\":[],\"dbID\":null}]}]}'\n//   )\n// );\n","import { Page } from './page';\nimport { Scheme } from './scheme';\nimport { Compound } from './compound';\nimport { Fraction } from './fraction';\n\nexport function getFromLocalStorage() {\n  if (!localStorage.getItem('pageBody')) {\n    return null;\n  }\n  const page = new Page();\n\n  const data = JSON.parse(localStorage.getItem('pageBody'));\n  for (schemeData of data.body) {\n    const scheme = new Scheme();\n    page.body.push(scheme);\n\n    for (compoundData of schemeData.body) {\n      const compound = new Compound(\n        compoundData,\n        compoundData.compoundGlobalID\n      );\n      scheme.body.push(compound);\n\n      for (fractionData of compoundData.fractions) {\n        const fraction = new Fraction();\n        compound.fractions.push(fraction);\n      }\n    }\n  }\n\n  return page;\n}\n\n// export function\n"],"names":["Object","defineProperty","$665014edacbfe17b$exports","value","default","instance","Constructor","TypeError","$74e7f8130373505f$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","$74e7f8130373505f$exports","protoProps","staticProps","prototype","$cec85eba0a352189$exports","obj","$d67921ee12eadc51$export$b336c2702c498be5","Fraction","this","fractionGlobalID","mass","purity","isNMR","isLCMS","comment","$parcel$interopDefault","$7b31147ec915daf0$export$3898397e4b5f0c95","Compound","ref","arguments","_mw","mw","_dbID","dbID","_smiles","smiles","_isTestSuccessful","isTestSuccessful","_isScalingSuccessful","isScalingSuccessful","_fractions","fractions","globalCompoundID","compoundGlobalID","push","$1b8ba58b1229bd09$export$8892eb4527f7cb1c","schemeID","isLastInScheme","mainPage","document","querySelector","concat","markup","insertAdjacentHTML","$735bf0ab80c69926$export$c82fc41ad191f9b2","Scheme","_globalSchemeID","globalSchemeID","_body","body","$d393c6b361322d0d$export$6955bcca4cd3539f","Page","currentScemeID","$9b40833cdc4e19db$var$page","$9b40833cdc4e19db$var$sheet","sortedSchemeBody","sort","a","b","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","undefined","_step21","item","_step2","SmilesDrawer","parse","tree","$9b40833cdc4e19db$var$smilesDrawer","draw","_iterator2","Symbol","iterator","next","done","_loop3","err","return","$9b40833cdc4e19db$var$schemeButton","$9b40833cdc4e19db$var$globalCompoundID","parseInt","localStorage","getItem","$9b40833cdc4e19db$var$globalSchemeID","Drawer","width","height","page","data","JSON","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","schemeData","scheme","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","compoundData","compound","fractionData","fraction","$9b40833cdc4e19db$var$i","$9b40833cdc4e19db$var$_loop","console","log","$9b40833cdc4e19db$var$schemes","querySelectorAll","$9b40833cdc4e19db$var$_iteratorNormalCompletion","$9b40833cdc4e19db$var$_didIteratorError","$9b40833cdc4e19db$var$_iteratorError","$9b40833cdc4e19db$var$_step","addEventListener","e1","currentSchemeID","currentTarget","dataset","schemeid","name","preventDefault","disabled","setItem","addCompound","lastChild","e","$9b40833cdc4e19db$var$textInputHandler","$9b40833cdc4e19db$var$checkboxClicksHandler","stringify","$9b40833cdc4e19db$var$_iterator","$9b40833cdc4e19db$var$_loop1","currentSchemeID1","addScheme","currentCompoundID","addedScheme","e2","alert","$9b40833cdc4e19db$var$formsCollection","$9b40833cdc4e19db$var$_iteratorNormalCompletion1","$9b40833cdc4e19db$var$_didIteratorError1","$9b40833cdc4e19db$var$_iteratorError1","$9b40833cdc4e19db$var$_step1","form","parentNode","$9b40833cdc4e19db$var$_iterator1","$9b40833cdc4e19db$var$_loop2","err1","nodeName","type","compoundObject","find","id","molWeightInput","formula","getMolecularFormula","calc","checked"],"version":3,"file":"index.7fe4f2c7.js.map"}