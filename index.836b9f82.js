function n(n){return n&&n.__esModule?n.default:n}var e={};Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(n,e,o){e in n?Object.defineProperty(n,e,{value:o,enumerable:!0,configurable:!0,writable:!0}):n[e]=o;return n};class o{constructor(){this.fractionGlobalID=o.fractionGlobalID+=1,this.mass=null,this.purity=null,this.isNMR=!1,this.isLCMS=!1,this.comment=!1}}n(e)(o,"fractionGlobalID",0);class t{addFraction(){this.fractions.push(new o)}constructor({mw:n=null,dbID:e=null,smiles:o=null,isTestSuccessful:t=!1,isScalingSuccessful:a=!1,fractions:l=[]}={},s){this.compoundGlobalID=s,this.mw=n,this.smiles=o,this.isTestSuccessful=t,this.isScalingSuccessful=a,this.fractions=l,this.dbID=e}}function a({compoundGlobalID:n,mw:e="",smiles:o="",isTestSuccessful:t,isScalingSuccessful:a,dbID:l="",fractions:s}={}){const c=`<form action="#" class="compound-form" data-id = '${n}'>\n    <div class="compound-form__body">\n      <div class="compound-form__upper-part">\n        <div class="compound-form-canvas-container">\n          <canvas></canvas>\n        </div>\n        <div class="compound-form__compound-data">\n          <label class="">\n            ID\n            <input type="text" name="dbID" value="${l}" />\n          </label>\n          <label class="">\n            MW\n            <input type="text" name="mw" value="${e}" />\n          </label>\n          <label>\n            <input type="checkbox" name="" id="" name="isTestSuccessful" checked='${t}' />\n            Test\n          </label>\n          <label>\n            <input type="checkbox" name="" id="" name="isScalingSuccessful" checked='${a}' />\n            Scaling\n          </label>\n        </div>\n      </div>\n      <div class="compound-form__lower-part">\n        <label class="text-input-label">\n          SMILES\n          <input type="text" name="smiles" value="${o}" />\n        </label>\n        <div class="compound-from__button-block">\n          <button type="submit">Add task</button>\n          <button type="submit">Add compund</button>\n          <label>\n            Fractions\n            <input type="checkbox" name="" id="" />\n          </label>\n        </div>\n      </div>\n    </div>\n    <div class="compound-form__fractions">\n      <div class="compound-form__fractions-main">\n        <label>\n          Fractions\n          <select name="" id="">\n            <option value="">Fraction 1</option>\n            <option value="">Fraction 2</option>\n          </select>\n        </label>\n        <button type="submit">Add fraction</button>\n      </div>\n      <div class="compound-form__single-fraction">\n        <div class="compound-form__single-fraction-upper-part">\n          <div class="compound-form__single-fraction-characteristics">\n            <label class="">\n              Mass\n              <input type="text" />\n            </label>\n            <label class="">\n              Purity\n              <input type="text" />\n            </label>\n          </div>\n          <div class="compound-form__single-fraction-spectra">\n            <label>\n              <input type="checkbox" name="" id="" />\n              NMR\n            </label>\n            <label>\n              <input type="checkbox" name="" id="" />\n              LCMS\n            </label>\n          </div>\n        </div>\n        <div class="compound-form__single-fraction-lower-part">\n          <label class="">\n            Comments\n            <textarea name="" id="" cols="30" rows="3"></textarea>\n          </label>\n        </div>\n      </div>\n    </div>\n  </form>`;document.querySelector(".main-page").insertAdjacentHTML("beforeend",c)}n(e)(t,"compoundGlobalID",0);class l{addCompound(n){this.body.push(new t({},n))}constructor({schemeGlobalID:n=(l.schemeGlobalID+=1),body:e=[]}={}){this.schemeGlobalID=n,this.body=e}}n(e)(l,"schemeGlobalID",0);class s{constructor({body:o=[]}={}){n(e)(this,"body",void 0),this.body=o}}document.querySelector(".page-button"),document.querySelector(".scheme-button");const c=document.querySelector(".compound-button"),i=document.querySelector(".main-page");let d=parseInt(localStorage.getItem("globalCompoundID"))||0;c.addEventListener("click",(()=>{d+=1,localStorage.setItem("globalCompoundID",d),u.body[0].addCompound(d),a(u.body[0].body[u.body[0].body.length-1]),i.lastChild.addEventListener("input",(n=>{if("INPUT"===n.target.nodeName){u.body[0].body.find((e=>e.compoundGlobalID===parseInt(n.currentTarget.dataset.id)))[n.target.name]=n.target.value,localStorage.setItem("pageBody",JSON.stringify(u))}})),localStorage.setItem("pageBody",JSON.stringify(u))}));let u=function(){if(!localStorage.getItem("pageBody"))return null;const n=new s,e=JSON.parse(localStorage.getItem("pageBody"));for(schemeData of e.body){const e=new l;for(compoundData of(n.body.push(e),schemeData.body)){const n=new t(compoundData,compoundData.compoundGlobalID);for(fractionData of(e.body.push(n),compoundData.fractions)){const e=new o;n.fractions.push(e)}}}return n}();if(console.log(u),null===u&&(u=new s),0!==u.body.length){const n=u.body[0].body.sort(((n,e)=>{n.compoundGlobalID,e.compoundGlobalID}));for(const e of n)a(e)}else console.log("local storage is empty"),u.body.push(new l);const r=document.querySelectorAll("[data-id]");for(item of r)item.addEventListener("input",(n=>{if("INPUT"===n.target.nodeName){u.body[0].body.find((e=>e.compoundGlobalID===parseInt(n.currentTarget.dataset.id)))[n.target.name]=n.target.value,localStorage.setItem("pageBody",JSON.stringify(u))}}));
//# sourceMappingURL=index.836b9f82.js.map
