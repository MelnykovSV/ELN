{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_define_property.js","src/js/fraction.js","src/js/compound.js","src/js/renderCompoundForm.js","src/js/scheme.js","src/js/page.js","src/js/eln.js","src/js/localStorage.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","export class Fraction {\n  static fractionGlobalID = 0;\n  // #mass;\n  // #purity;\n  // #isNMR;\n  // #isLCMS;\n  // #comment;\n  constructor() {\n    this.fractionGlobalID = Fraction.fractionGlobalID += 1;\n    this.mass = null;\n    this.purity = null;\n    this.isNMR = false;\n    this.isLCMS = false;\n    this.comment = false;\n  }\n}\n","import { Fraction } from './fraction';\n\nexport class Compound {\n  static compoundGlobalID = 0;\n  // #mw;\n  // #smiles;\n  // #isTestSuccessful;\n  // #isScalingSuccessful;\n  // #fractions;\n\n  constructor(\n    {\n      // compoundGlobalID = (Compound.compoundGlobalID += 1),\n      mw = null,\n      dbID = null,\n      smiles = null,\n      isTestSuccessful = false,\n      isScalingSuccessful = false,\n      fractions = [],\n    } = {},\n    globalCompoundID\n  ) {\n    this.compoundGlobalID = globalCompoundID;\n    this.mw = mw;\n    this.smiles = smiles;\n    this.isTestSuccessful = isTestSuccessful;\n    this.isScalingSuccessful = isScalingSuccessful;\n    this.fractions = fractions;\n    this.dbID = dbID;\n  }\n\n  // get isTestSuccessful() {\n  //   return this.#isTestSuccessful;\n  // }\n  // get isScalingSuccessful() {\n  //   return this.#isScalingSuccessful;\n  // }\n\n  // set isTestSuccessful(value) {\n  //   if (typeof value === 'boolean') {\n  //     this.#isTestSuccessful = value;\n  //   } else {\n  //     throw new Error('Value must be a boolean');\n  //   }\n  // }\n  // set isScalingSuccessful(value) {\n  //   if (typeof value === 'boolean') {\n  //     this.#isScalingSuccessful = value;\n  //   } else {\n  //     throw new Error('Value must be a boolean');\n  //   }\n  // }\n\n  addFraction() {\n    this.fractions.push(new Fraction());\n  }\n}\n","export function renderCompoundForm({\n  compoundGlobalID,\n  mw = '',\n  smiles = '',\n  isTestSuccessful,\n  isScalingSuccessful,\n  dbID = '',\n  fractions,\n} = {}) {\n  const mainPage = document.querySelector('.main-page');\n  const markup = `<form action=\"#\" class=\"compound-form\" data-id = '${compoundGlobalID}'>\n    <div class=\"compound-form__body\">\n      <div class=\"compound-form__upper-part\">\n        <div class=\"compound-form-canvas-container\">\n          <canvas></canvas>\n        </div>\n        <div class=\"compound-form__compound-data\">\n          <label class=\"\">\n            ID\n            <input type=\"text\" name=\"dbID\" value=\"${dbID}\" />\n          </label>\n          <label class=\"\">\n            MW\n            <input type=\"text\" name=\"mw\" value=\"${mw}\" />\n          </label>\n          <label>\n            <input type=\"checkbox\" name=\"\" id=\"\" name=\"isTestSuccessful\" checked='${isTestSuccessful}' />\n            Test\n          </label>\n          <label>\n            <input type=\"checkbox\" name=\"\" id=\"\" name=\"isScalingSuccessful\" checked='${isScalingSuccessful}' />\n            Scaling\n          </label>\n        </div>\n      </div>\n      <div class=\"compound-form__lower-part\">\n        <label class=\"text-input-label\">\n          SMILES\n          <input type=\"text\" name=\"smiles\" value=\"${smiles}\" />\n        </label>\n        <div class=\"compound-from__button-block\">\n          <button type=\"submit\">Add task</button>\n          <button type=\"submit\">Add compund</button>\n          <label>\n            Fractions\n            <input type=\"checkbox\" name=\"\" id=\"\" />\n          </label>\n        </div>\n      </div>\n    </div>\n    <div class=\"compound-form__fractions\">\n      <div class=\"compound-form__fractions-main\">\n        <label>\n          Fractions\n          <select name=\"\" id=\"\">\n            <option value=\"\">Fraction 1</option>\n            <option value=\"\">Fraction 2</option>\n          </select>\n        </label>\n        <button type=\"submit\">Add fraction</button>\n      </div>\n      <div class=\"compound-form__single-fraction\">\n        <div class=\"compound-form__single-fraction-upper-part\">\n          <div class=\"compound-form__single-fraction-characteristics\">\n            <label class=\"\">\n              Mass\n              <input type=\"text\" />\n            </label>\n            <label class=\"\">\n              Purity\n              <input type=\"text\" />\n            </label>\n          </div>\n          <div class=\"compound-form__single-fraction-spectra\">\n            <label>\n              <input type=\"checkbox\" name=\"\" id=\"\" />\n              NMR\n            </label>\n            <label>\n              <input type=\"checkbox\" name=\"\" id=\"\" />\n              LCMS\n            </label>\n          </div>\n        </div>\n        <div class=\"compound-form__single-fraction-lower-part\">\n          <label class=\"\">\n            Comments\n            <textarea name=\"\" id=\"\" cols=\"30\" rows=\"3\"></textarea>\n          </label>\n        </div>\n      </div>\n    </div>\n  </form>`;\n  mainPage.insertAdjacentHTML('beforeend', markup);\n}\n\n// export function renderCompoundForm() {\n//     const mainPage = document.querySelector('.main-page');\n//     const markup = `<form action=\"#\" class=\"compound-form\" >\n//       <div class=\"compound-form__body\">\n//         <div class=\"compound-form__upper-part\">\n//           <div class=\"compound-form-canvas-container\">\n//             <canvas></canvas>\n//           </div>\n//           <div class=\"compound-form__compound-data\">\n//             <label class=\"\">\n//               ID\n//               <input type=\"text\" />\n//             </label>\n//             <label class=\"\">\n//               MW\n//               <input type=\"text\" />\n//             </label>\n//             <label>\n//               <input type=\"checkbox\" name=\"\" id=\"\" />\n//               Test\n//             </label>\n//             <label>\n//               <input type=\"checkbox\" name=\"\" id=\"\" />\n//               Scaling\n//             </label>\n//           </div>\n//         </div>\n//         <div class=\"compound-form__lower-part\">\n//           <label class=\"text-input-label\">\n//             SMILES\n//             <input type=\"text\" />\n//           </label>\n//           <div class=\"compound-from__button-block\">\n//             <button type=\"submit\">Add task</button>\n//             <button type=\"submit\">Add compund</button>\n//             <label>\n//               Fractions\n//               <input type=\"checkbox\" name=\"\" id=\"\" />\n//             </label>\n//           </div>\n//         </div>\n//       </div>\n//       <div class=\"compound-form__fractions\">\n//         <div class=\"compound-form__fractions-main\">\n//           <label>\n//             Fractions\n//             <select name=\"\" id=\"\">\n//               <option value=\"\">Fraction 1</option>\n//               <option value=\"\">Fraction 2</option>\n//             </select>\n//           </label>\n//           <button type=\"submit\">Add fraction</button>\n//         </div>\n//         <div class=\"compound-form__single-fraction\">\n//           <div class=\"compound-form__single-fraction-upper-part\">\n//             <div class=\"compound-form__single-fraction-characteristics\">\n//               <label class=\"\">\n//                 Mass\n//                 <input type=\"text\" />\n//               </label>\n//               <label class=\"\">\n//                 Purity\n//                 <input type=\"text\" />\n//               </label>\n//             </div>\n//             <div class=\"compound-form__single-fraction-spectra\">\n//               <label>\n//                 <input type=\"checkbox\" name=\"\" id=\"\" />\n//                 NMR\n//               </label>\n//               <label>\n//                 <input type=\"checkbox\" name=\"\" id=\"\" />\n//                 LCMS\n//               </label>\n//             </div>\n//           </div>\n//           <div class=\"compound-form__single-fraction-lower-part\">\n//             <label class=\"\">\n//               Comments\n//               <textarea name=\"\" id=\"\" cols=\"30\" rows=\"3\"></textarea>\n//             </label>\n//           </div>\n//         </div>\n//       </div>\n//     </form>`;\n//     mainPage.insertAdjacentHTML('beforeend', markup);\n//   }\n","import { Compound } from './compound.js';\nimport { renderCompoundForm } from './renderCompoundForm.js';\n\nexport class Scheme {\n  static schemeGlobalID = 0;\n  // #body;\n  constructor({\n    schemeGlobalID = (Scheme.schemeGlobalID += 1),\n    body = [],\n  } = {}) {\n    this.schemeGlobalID = schemeGlobalID;\n    this.body = body;\n    // if (this.body.length === 0) {\n    //   this.body.push(new Compound());\n    // }\n  }\n\n  addCompound(globalCompoundID) {\n    this.body.push(new Compound({}, globalCompoundID));\n    // renderCompoundForm();\n  }\n\n  // get body() {\n  //   return this.#body;\n  // }\n}\n","import { Scheme } from './scheme';\n\nexport class Page {\n  body;\n  constructor({ body = [] } = {}) {\n    this.body = body;\n    // if (this.body.length === 0) {\n    //   this.body.push(new Scheme());\n    // }\n  }\n\n  //   get body() {\n  //     return this.#body;\n  //   }\n}\n","import { Scheme } from './scheme.js';\nimport { Compound } from './compound.js';\nimport { Fraction } from './fraction.js';\nimport { Page } from './page.js';\nimport { renderCompoundForm } from './renderCompoundForm.js';\n// import { conformsTo } from 'lodash';\nimport { getFromLocalStorage } from './localStorage.js';\n\nconst pageButton = document.querySelector('.page-button');\nconst schemeButton = document.querySelector('.scheme-button');\nconst compoundButton = document.querySelector('.compound-button');\nconst mainPage = document.querySelector('.main-page');\n\nlet globalCompoundID = parseInt(localStorage.getItem('globalCompoundID')) || 0;\n\ncompoundButton.addEventListener('click', () => {\n  globalCompoundID += 1;\n  localStorage.setItem('globalCompoundID', globalCompoundID);\n\n  page.body[0].addCompound(globalCompoundID);\n  renderCompoundForm(page.body[0].body[page.body[0].body.length - 1]);\n  mainPage.lastChild.addEventListener('input', e => {\n    if (e.target.nodeName === 'INPUT') {\n      const compoundObject = page.body[0].body.find(\n        item => item.compoundGlobalID === parseInt(e.currentTarget.dataset.id)\n      );\n      compoundObject[e.target.name] = e.target.value;\n      localStorage.setItem('pageBody', JSON.stringify(page));\n    }\n  });\n  localStorage.setItem('pageBody', JSON.stringify(page));\n});\n\nlet page = getFromLocalStorage();\nconsole.log(page);\n\nif (page === null) {\n  page = new Page();\n}\n\nif (page.body.length !== 0) {\n  const scheme = page.body[0];\n  const sortedSchemeBody = scheme.body.sort((a, b) => {\n    a.compoundGlobalID - b.compoundGlobalID;\n  });\n  for (const item of sortedSchemeBody) {\n    renderCompoundForm(item);\n  }\n} else {\n  console.log('local storage is empty');\n  page.body.push(new Scheme());\n}\n\nconst formsCollection = document.querySelectorAll('[data-id]');\n\nfor (item of formsCollection) {\n  item.addEventListener('input', e => {\n    if (e.target.nodeName === 'INPUT') {\n      const compoundObject = page.body[0].body.find(\n        item => item.compoundGlobalID === parseInt(e.currentTarget.dataset.id)\n      );\n      compoundObject[e.target.name] = e.target.value;\n      localStorage.setItem('pageBody', JSON.stringify(page));\n    }\n  });\n}\n","import { Page } from './page';\nimport { Scheme } from './scheme';\nimport { Compound } from './compound';\nimport { Fraction } from './fraction';\n\nexport function getFromLocalStorage() {\n  if (!localStorage.getItem('pageBody')) {\n    return null;\n  }\n  const page = new Page();\n\n  const data = JSON.parse(localStorage.getItem('pageBody'));\n  for (schemeData of data.body) {\n    const scheme = new Scheme();\n    page.body.push(scheme);\n\n    for (compoundData of schemeData.body) {\n      const compound = new Compound(\n        compoundData,\n        compoundData.compoundGlobalID\n      );\n      scheme.body.push(compound);\n\n      for (fractionData of compoundData.fractions) {\n        const fraction = new Fraction();\n        compound.fractions.push(fraction);\n      }\n    }\n  }\n\n  return page;\n}\n\n// export function\n"],"names":["Object","defineProperty","$da4b248c00322402$exports","value","default","obj","key","enumerable","configurable","writable","$e41e2b2a0e9bee93$export$b336c2702c498be5","constructor","this","fractionGlobalID","mass","purity","isNMR","isLCMS","comment","$parcel$interopDefault","$43a9ed44bede0182$export$3898397e4b5f0c95","addFraction","fractions","push","mw","dbID","smiles","isTestSuccessful","isScalingSuccessful","globalCompoundID","compoundGlobalID","$8284cf7668aede83$export$8892eb4527f7cb1c","markup","document","querySelector","insertAdjacentHTML","$0948148d908f2cee$export$c82fc41ad191f9b2","addCompound","body","schemeGlobalID","$852d6df3b960d687$export$6955bcca4cd3539f","$0917f25bfc47667f$var$compoundButton","$0917f25bfc47667f$var$mainPage","$0917f25bfc47667f$var$globalCompoundID","parseInt","localStorage","getItem","addEventListener","setItem","$0917f25bfc47667f$var$page","length","lastChild","e","target","nodeName","find","item","currentTarget","dataset","id","name","JSON","stringify","page","data","parse","schemeData","scheme","compoundData","compound","fractionData","fraction","console","log","sortedSchemeBody","sort","a","b","$0917f25bfc47667f$var$formsCollection","querySelectorAll"],"version":3,"file":"index.836b9f82.js.map"}