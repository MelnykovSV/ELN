function e(e){return e&&e.__esModule?e.default:e}var t={};Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,o){t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o;return e};class o{constructor(){this.fractionGlobalID=o.fractionGlobalID+=1,this.mass=null,this.purity=null,this.isNMR=!1,this.isLCMS=!1,this.comment=!1}}e(t)(o,"fractionGlobalID",0);class n{addFraction(){this.fractions.push(new o)}constructor({mw:e=null,dbID:t=null,smiles:o=null,isTestSuccessful:n=!1,isScalingSuccessful:a=!1,fractions:l=[]}={},s){this.compoundGlobalID=s,this.mw=e,this.smiles=o,this.isTestSuccessful=n,this.isScalingSuccessful=a,this.fractions=l,this.dbID=t}}function a({compoundGlobalID:e,mw:t="",smiles:o="",isTestSuccessful:n,isScalingSuccessful:a,dbID:l="",fractions:s}={},c,d){const i=`<form action="#" class="compound-form" data-id='${e}' data-schemeID=''>\n    <div class="compound-form__body">\n      <div class="compound-form__upper-part">\n        <div class="compound-form-canvas-container">\n          <canvas id="canvas${e}"></canvas>\n        </div>\n        <div class="compound-form__compound-data">\n          <label class="">\n            ID\n            <input type="text" name="dbID" value="${l}" />\n          </label>\n          <label class="">\n            MW\n            <input class='compound-form__mw-input' type="text" name="mw" value="${t}" />\n          </label>\n          <label>\n            <input type="checkbox" id="" name="isTestSuccessful" ${!0===n?"checked":""} />\n            Test\n          </label>\n          <label>\n            <input type="checkbox" id="" name="isScalingSuccessful" ${!0===a?"checked":""} />\n            Scaling\n          </label>\n        </div>\n      </div>\n      <div class="compound-form__lower-part">\n        <label class="text-input-label">\n          SMILES\n          <input type="text" name="smiles" value="${o}" />\n        </label>\n        <div class="compound-from__button-block">\n          <button type="submit">Add task</button>\n          <button type="submit" name='addCompound' ${"last"!==d?"disabled":""}>Add compund</button>\n          <label>\n            Fractions\n            <input type="checkbox" name="" id="" />\n          </label>\n        </div>\n      </div>\n    </div>\n    <div class="compound-form__fractions">\n      <div class="compound-form__fractions-main">\n        <label>\n          Fractions\n          <select name="" id="">\n            <option value="">Fraction 1</option>\n            <option value="">Fraction 2</option>\n          </select>\n        </label>\n        <button type="submit">Add fraction</button>\n      </div>\n      <div class="compound-form__single-fraction">\n        <div class="compound-form__single-fraction-upper-part">\n          <div class="compound-form__single-fraction-characteristics">\n            <label class="">\n              Mass\n              <input type="text" />\n            </label>\n            <label class="">\n              Purity\n              <input type="text" />\n            </label>\n          </div>\n          <div class="compound-form__single-fraction-spectra">\n            <label>\n              <input type="checkbox" name="" id="" />\n              NMR\n            </label>\n            <label>\n              <input type="checkbox" name="" id="" />\n              LCMS\n            </label>\n          </div>\n        </div>\n        <div class="compound-form__single-fraction-lower-part">\n          <label class="">\n            Comments\n            <textarea name="" id="" cols="30" rows="3"></textarea>\n          </label>\n        </div>\n      </div>\n    </div>\n  </form>`;document.querySelector(`[data-schemeid='${c}']`).insertAdjacentHTML("beforeend",i)}e(t)(n,"compoundGlobalID",0);class l{addCompound(e){this.body.push(new n({},e))}constructor({globalSchemeID:e=(l.globalSchemeID+=1),body:t=[]}={}){this.globalSchemeID=e,this.body=t}}e(t)(l,"globalSchemeID",0);class s{addScheme(e){this.body.push(new l({},e))}constructor({body:o=[]}={}){e(t)(this,"body",void 0),this.body=o}}document.querySelector(".page-button");const c=document.querySelector(".scheme-button"),d=document.querySelector(".sheet");let i=parseInt(localStorage.getItem("globalCompoundID"))||0,r=parseInt(localStorage.getItem("globalSchemeID"))||0,u=new SmilesDrawer.Drawer({width:150,height:150}),m=function(){if(!localStorage.getItem("pageBody"))return null;const e=new s,t=JSON.parse(localStorage.getItem("pageBody"));for(schemeData of t.body){const t=new l;for(compoundData of(e.body.push(t),schemeData.body)){const e=new n(compoundData,compoundData.compoundGlobalID);for(fractionData of(t.body.push(e),compoundData.fractions)){const t=new o;e.fractions.push(t)}}}return e}();if(null===m&&(m=new s),0!==m.body.length)for(let e=0;e<m.body.length;e+=1){const t=m.body[e].globalSchemeID;d.insertAdjacentHTML("beforeend",`<div class="scheme" data-schemeID='${t}'></div>`);const o=m.body[e].body.sort(((e,t)=>{e.compoundGlobalID,t.compoundGlobalID}));for(const e of o){if(e===o[o.length-1])a(e,t,"last");else a(e,t);SmilesDrawer.parse(e.smiles,(function(t){u.draw(t,`canvas${e.compoundGlobalID}`,"light",!1)}))}}else console.log("local storage is empty");const b=document.querySelectorAll(".scheme");for(const e of b)e.addEventListener("click",(t=>{const o=t.currentTarget.dataset.schemeid;"addCompound"===t.target.name&&(t.preventDefault(),i+=1,t.target.disabled=!0,localStorage.setItem("globalCompoundID",i),m.body[o-1].addCompound(i),a(m.body[o-1].body[m.body[o-1].body.length-1],t.currentTarget.dataset.schemeid,"last"),e.lastChild&&(e.lastChild.addEventListener("input",(e=>{g(e,o)})),e.lastChild.addEventListener("change",(e=>{h(e,o)})),localStorage.setItem("pageBody",JSON.stringify(m))))}));c.addEventListener("click",(()=>{console.log("scheme id before adding: "+r),r+=1;const e=r;console.log("scheme id after adding: "+e),localStorage.setItem("globalSchemeID",e),m.addScheme(e),d.insertAdjacentHTML("beforeend",`<div class="scheme" data-schemeID='${e}'></div>`),i+=1;const t=i;localStorage.setItem("globalCompoundID",i),console.log(m.body[e-1]),m.body[e-1].addCompound(t),a(m.body[e-1].body[0],e,"last"),console.log(`added new scheme with id ${e} with a new form(id: ${t})`);const o=document.querySelector(".sheet").lastChild;o.lastChild;console.log("currentSchemeID!!!!!"+e),console.log(o),console.log(o.lastChild),o.addEventListener("click",(e=>{const t=e.currentTarget.dataset.schemeid;console.log(o),"addCompound"===e.target.name&&(e.preventDefault(),i+=1,e.target.disabled=!0,localStorage.setItem("globalCompoundID",i),m.body[t-1].addCompound(i),a(m.body[t-1].body[m.body[t-1].body.length-1],e.currentTarget.dataset.schemeid,"last"),console.log(o),console.log(o.lastChild),o.lastChild&&(o.lastChild.addEventListener("input",(e=>{g(e,t)})),o.lastChild.addEventListener("change",(e=>{h(e,t)})),localStorage.setItem("pageBody",JSON.stringify(m))))})),o.lastChild?(o.lastChild.addEventListener("input",(t=>{g(t,e)})),o.lastChild.addEventListener("change",(t=>{h(t,e)})),localStorage.setItem("pageBody",JSON.stringify(m))):alert("UNKNOWN ERROR OCCURED!!! PLEASE RELOAD THE PAGE"),localStorage.setItem("pageBody",JSON.stringify(m))}));const p=document.querySelectorAll("[data-id]");console.log(p);for(const e of p)e.addEventListener("input",(t=>{console.log(e.parentNode.dataset.schemeid),console.log(e),g(t,e.parentNode.dataset.schemeid)})),e.addEventListener("change",(t=>{h(t,e.parentNode.dataset.schemeid)}));function g(e,t){if(console.log("this:"+t),"INPUT"===e.target.nodeName&&"text"===e.target.type){const o=m.body[t-1].body.find((t=>t.compoundGlobalID===parseInt(e.currentTarget.dataset.id)));if(console.log(m.body[t-1].body),o[e.target.name]=e.target.value,localStorage.setItem("pageBody",JSON.stringify(m)),"smiles"===e.target.name){const t=e.currentTarget.querySelector(".compound-form__mw-input");SmilesDrawer.parse(e.target.value,(function(t){u.draw(t,`canvas${e.currentTarget.dataset.id}`,"light",!1)})),SmilesDrawer.parse(e.target.value,(e=>{const n=u.getMolecularFormula(e);t.value=calc(n).mass,o.mw=calc(n).mass,localStorage.setItem("pageBody",JSON.stringify(m))}))}}}function h(e,t){if(console.log("this:"+t),"INPUT"===e.target.nodeName&&"checkbox"===e.target.type){m.body[t-1].body.find((t=>t.compoundGlobalID===parseInt(e.currentTarget.dataset.id)))[e.target.name]=e.target.checked,localStorage.setItem("pageBody",JSON.stringify(m))}}console.log(m);
//# sourceMappingURL=index.fb4c5b86.js.map
